image: python:latest

stages:
  - dependency
  - kubeconfig
  - build
  - push
  - scan
  - namespace
  - dockersecret
  - deploy

variables:
  DOCKER_USERNAME: $DOCKER_USERNAME
  DOCKER_EMAIL: "docker email used on the account you want to push to."
  DOCKER_PASSWORD: $DOCKER_PASSWORD
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  DOCKER_HOST_URL: "https://index.docker.io/v1/"
  kubernetes_namespace: "litecoin"
  app_name: "litecoin"
  image: "litecoin"
  docker_org_name: "the name of your docker organization."
  kubernetes_cluster_name: "the name of your eks cluster."
  docker_pull_secret: "litecoin-docker-secret"
  OUTPUT_FILE: "deployment.yaml"
  INPUT_FILE: "deployment.yaml.template"
  replicas: "1"
  termination_grace_period_seconds: "10"
  access_mode: "ReadWriteOnce"
  storage_class: "gp2"
  storage_size: "50Gi"
  memory_request: "1Gi"
  cpu_request: "500m"
  memory_limit: "1Gi"
  cpu_limit: "1"

dependencies-job:
  stage: dependency
  script:
    - apt-get update -y
    - apt-get install curl -y
    - pip install awscli
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
    - chmod +x ./aws-iam-authenticator
    - mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator

kubeconfig-job:
  stage: kubeconfig
  script:
    - aws eks update-kubeconfig --name ${kubernetes_cluster_name} --region ${AWS_DEFAULT_REGION}

build-job:
  stage: build
  script:
    - docker build -t ${docker_org_name}/${image}:latest .

push-job:
  stage: push
  script:
    - docker push ${docker_org_name}/${image}:latest

scan-job:
  stage: scan
  script:
    - docker login ${DOCKER_USERNAME} ${DOCKER_PASSWORD}
    - curl -s https://ci-tools.anchore.io/inline_scan-v0.6.0 | bash -s -- -p -f idevopsiointernal/litecoin:gitlab-1

create-namespace-job:
  stage: namespace
  script:
    - kubectl create namespace ${kubernetes_namespace} || echo "Namespace Exists"

create-dockersecret-job:
  stage: dockersecret
  script:
    - kubectl create secret docker-registry ${DOCKER_PULL_SECRET} --docker-server="${DOCKER_HOST_URL}" --docker-username="${DOCKER_USERNAME}" --docker-password="${DOCKER_PASSWORD}"  --docker-email="${DOCKER_EMAIL}" --namespace ${kubernetes_namespace} || echo "Secret Exists."

deploy-job:
  stage: deploy
  script:
    - python libraries/utilities/template_engine.py
    - kubectl apply -f ${OUTPUT_FILE} -n ${kubernetes_namespace}
